name: Release

on:
  push:
    tags:
      - 'v*'         # 例: v0.0.3
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

permissions:
  contents: write   # 允许创建 Release、上传资产

jobs:
  build-and-release:
    name: Build & Release (JDK 8)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # 为了读取版本、生成变更日志等

      - name: Setup Temurin JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Resolve project version from pom.xml
        id: ver
        run: |
          VERSION=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Project version: $VERSION"

      - name: Build shaded JAR
        run: mvn -B -U -e -DskipTests package

      - name: Locate shaded JAR(s)
        id: findjar
        run: |
          mkdir -p dist
          # 典型命名: marshalsec-<version>-all.jar
          mapfile -t jars < <(find . -type f -path "*/target/*" -name "*-all.jar")
          if [ "${#jars[@]}" -eq 0 ]; then
            echo "No *-all.jar found under target/"
            exit 1
          fi
          for j in "${jars[@]}"; do
            base=$(basename "$j")
            # 规范化命名: marshalsec-${{ steps.ver.outputs.version }}-all.jar
            # 如已有版本号可直接拷贝
            cp -v "$j" "dist/$base"
          done
          ls -lah dist

      - name: Generate checksums
        run: |
          cd dist
          for f in *.jar; do
            sha256sum "$f" > "$f.sha256"
            sha1sum   "$f" > "$f.sha1"
          done
          ls -lah

      - name: Upload build artifacts (CI record)
        uses: actions/upload-artifact@v4
        with:
          name: marshalsec-${{ steps.ver.outputs.version }}
          path: dist/*

      - name: Create GitHub Release
        id: ghrel
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}                  # 例如 v0.0.3
          name: marshalsec ${{ github.ref_name }}
          draft: false
          prerelease: ${{ inputs.prerelease || false }}
          files: |
            dist/*.jar
            dist/*.sha256
            dist/*.sha1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
